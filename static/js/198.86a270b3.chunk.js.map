{"version":3,"file":"static/js/198.86a270b3.chunk.js","mappings":"mJAEA,MAMA,EANeA,IAAa,IAAZ,KAACC,GAAKD,EACpB,OACEE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAEH,GAAU,C,wICEhD,MAmGA,EAnGkBI,KAEhB,MAAMC,EAAUC,EAAgBC,QAAOC,GAAsB,OAAdA,EAAKC,OAC9CC,EAASJ,EAAgBC,QAAOC,GAAsB,WAAdA,EAAKC,OAC7CE,EAASL,EAAgBC,QAAOC,GAAsB,OAAdA,EAAKC,OAG7CG,EAAgBC,GACbA,EAAoBC,KAAIN,GAAQA,EAAKO,QASxCC,EAAYA,CAACC,EAAOC,KACxB,MAAMC,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOG,IACzBD,EAAOE,KAAKH,EAAOE,EAAIF,EAAOI,SAEhC,OAAOH,CAAM,EAGf,OACEI,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACtB,UAAU,MAAKC,SAAA,EACpBF,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CAACzB,KAAK,eACbuB,EAAAA,EAAAA,MAACG,EAAAA,EAAI,CAAAvB,SAAA,EAEHF,EAAAA,EAAAA,KAAA,OAAAE,UACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACtB,UAAU,OAAMC,SAAA,EACrBF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CAAAxB,SAAC,cACbF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAAAzB,UACRF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CACRC,KAAM,CACJC,OAAQ1B,EAAQS,KAAIN,GAAQA,EAAKwB,QACjCC,SAAU,CACR,CACED,MAAO,WACPE,gBAAiBlB,EAAUX,EAAQiB,OA5BjC,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YA6BhFQ,KAAMlB,EAAaP,MAIzB0B,OAAO,4BAOf9B,EAAAA,EAAAA,KAAA,OAAAE,UACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACtB,UAAU,OAAMC,SAAA,EACrBF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CAAAxB,SAAC,YACbF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAAAzB,UACRF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CACRC,KAAM,CACJC,OAAQrB,EAAOI,KAAIN,GAAQA,EAAKwB,QAChCC,SAAU,CACR,CACED,MAAO,QACPE,gBAAiBlB,EAAUN,EAAOY,OAjDhC,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAkDhFQ,KAAMlB,EAAaF,MAIzBqB,OAAO,4BAOf9B,EAAAA,EAAAA,KAAA,OAAAE,UACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACtB,UAAU,OAAMC,SAAA,EACrBF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CAAAxB,SAAC,UACbF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAAAzB,UACRF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CACRC,KAAM,CACJC,OAAQpB,EAAOG,KAAIN,GAAQA,EAAKwB,QAChCC,SAAU,CACR,CACED,MAAO,OACPE,gBAAiBlB,EAAUL,EAAOW,OAtEhC,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAuEhFQ,KAAMlB,EAAaD,MAIzBoB,OAAO,gCAMX,C","sources":["components/Banner.js","views/dashboard/Dashboard.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Banner = ({text}) => {\r\n  return (\r\n    <h1 className='text-center mb-3'>{text}</h1>\r\n  )\r\n}\r\n\r\nexport default Banner","import React from \"react\";   \r\nimport Banner from \"../../components/Banner.js\";\r\nimport { CCard, CCardBody, CCardHeader, CRow } from '@coreui/react'\r\nimport { CChartBar } from '@coreui/react-chartjs' \r\nimport consumablesData from \"../../assets/consumables.json\"\r\n\r\nconst Dashboard = () => {  \r\n  // Filter the consumables data by type (liquids, pieces, weight)\r\n  const liquids = consumablesData.filter(item => item.type === \"ml\");\r\n  const pieces = consumablesData.filter(item => item.type === \"piezas\");\r\n  const weight = consumablesData.filter(item => item.type === \"gr\");\r\n\r\n  // Function to get stock data for the filtered consumables\r\n  const getStockData = (filteredConsumables) => {\r\n    return filteredConsumables.map(item => item.stock);\r\n  };\r\n\r\n  // Predefined colors for bars\r\n  const liquidsColors = ['#FF6384', '#4BC0C0', '#FFCE56', '#41B883', '#E46651', '#00D8FF', '#DD1B16', '#36A2EB'];\r\n  const piecesColors =  ['#FF6384', '#4BC0C0', '#FFCE56', '#41B883', '#E46651', '#00D8FF', '#DD1B16', '#36A2EB']; \r\n  const weightColors =  ['#FF6384', '#4BC0C0', '#FFCE56', '#41B883', '#E46651', '#00D8FF', '#DD1B16', '#36A2EB']; \r\n\r\n  // Function to return enough colors, repeating the array if necessary\r\n  const getColors = (count, colors) => {\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n      result.push(colors[i % colors.length]); // Repeats colors if count exceeds available colors\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <CCard className=\"p-3\"> \r\n      <Banner text=\"Dashboard\"/> \r\n      <CRow>\r\n        {/* Graph for Liquids (ml) */}\r\n        <div>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>Liquidos</CCardHeader>\r\n            <CCardBody>\r\n              <CChartBar\r\n                data={{\r\n                  labels: liquids.map(item => item.label),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Liquidos',\r\n                      backgroundColor: getColors(liquids.length, liquidsColors), // Dynamically assigned colors\r\n                      data: getStockData(liquids),\r\n                    },\r\n                  ],\r\n                }}\r\n                labels=\"consumablesData\"\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </div>\r\n\r\n        {/* Graph for Pieces (piezas) */}\r\n        <div>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>Piezas</CCardHeader>\r\n            <CCardBody>\r\n              <CChartBar\r\n                data={{\r\n                  labels: pieces.map(item => item.label),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Pieza',\r\n                      backgroundColor: getColors(pieces.length, piecesColors), // Dynamically assigned colors\r\n                      data: getStockData(pieces),\r\n                    },\r\n                  ],\r\n                }}\r\n                labels=\"consumablesData\"\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </div>\r\n\r\n        {/* Graph for Weight (gr) */}\r\n        <div>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>Peso</CCardHeader>\r\n            <CCardBody>\r\n              <CChartBar\r\n                data={{\r\n                  labels: weight.map(item => item.label),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Peso',\r\n                      backgroundColor: getColors(weight.length, weightColors), // Dynamically assigned colors\r\n                      data: getStockData(weight),\r\n                    },\r\n                  ],\r\n                }}\r\n                labels=\"consumablesData\"\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </div>\r\n      </CRow>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","text","_jsx","className","children","Dashboard","liquids","consumablesData","filter","item","type","pieces","weight","getStockData","filteredConsumables","map","stock","getColors","count","colors","result","i","push","length","_jsxs","CCard","Banner","CRow","CCardHeader","CCardBody","CChartBar","data","labels","label","datasets","backgroundColor"],"sourceRoot":""}