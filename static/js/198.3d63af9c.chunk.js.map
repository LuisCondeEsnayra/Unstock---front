{"version":3,"file":"static/js/198.3d63af9c.chunk.js","mappings":"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","sources":["components/Banner.js","components/recipes/RecipeBanner.js","webpack://unstock---front/./src/components/recipes/recipeCard.module.css?27e8","components/recipes/RecipeCard.js","webpack://unstock---front/./src/components/recipes/RecipesGrid.module.css?ed20","components/recipes/RecipeGrid.js","components/recipes/recipeModal/MeasureDropdown.js","components/recipes/recipeModal/ProductForm.js","components/recipes/recipeModal/SearchableMultiSelect.js","components/recipes/recipeModal/RecipeModal.js","components/recipes/Recipes.js","views/dashboard/Dashboard.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Banner = ({text}) => {\r\n  return (\r\n    <h1 className='text-center mb-3'>{text}</h1>\r\n  )\r\n}\r\n\r\nexport default Banner","import React from \"react\";\r\nimport { CCardBody, CCardHeader, CRow, CCol } from \"@coreui/react\";\r\n\r\nconst RecipeBanner = (props) => {\r\n  const { name, image, sell, type, ingredients, recipe } = props.recipe;\r\n  return (\r\n    <>\r\n      <CCardHeader>\r\n        <h5 className=\"text-center\">{name}</h5>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol xs=\"auto\" className=\"text-center\">\r\n            <img\r\n              style={{ maxHeight: \"40vh\", maxWidth: \"300px\" }}\r\n              src={image}\r\n              alt={name}\r\n            />\r\n          </CCol>\r\n          <CCol>\r\n            <CRow>\r\n              <h5>Descripción</h5>\r\n              <p>\r\n                Cantidad de venta: {sell} {type}\r\n              </p>\r\n              <p>\r\n                Rendimiento de receta: {sell} {type}\r\n              </p>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol>\r\n                <h5>Ingredientes</h5>\r\n                <ul className=\"mx-5\">\r\n                  {ingredients.map((ingredient, i) => (\r\n                    <li key={i}>\r\n                      {ingredient.quantity} {ingredient.measure} de{\" \"}\r\n                      {ingredient.ingredient}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <h5>Receta</h5>\r\n              <p>{recipe}</p>\r\n            </CRow>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardBody>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeBanner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"recipeImage\":\"recipeCard_recipeImage__UlvYo\"};","import {\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CCardHeader,\r\n  CCardFooter,\r\n} from \"@coreui/react\";\r\nimport classes from \"./recipeCard.module.css\";\r\n\r\nconst RecipeCard = (props) => {\r\n  const { name, image } = props.recipe;\r\n\r\n  return (\r\n    <div onClick={props.handleShowMore}>\r\n      <h5>{name}</h5>\r\n      <img src={image} alt={name} className={`${classes.recipeImage}  `} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardHeight\":\"RecipesGrid_cardHeight__zIZxe\",\"plusButton\":\"RecipesGrid_plusButton__pv6bp\"};","import React from \"react\";\r\nimport { CRow, CCol, CCard } from \"@coreui/react\";\r\nimport RecipeCard from \"./RecipeCard\";\r\nimport classes from \"./RecipesGrid.module.css\";\r\n\r\nconst RecipeGrid = (props) => {\r\n  return (\r\n    <CRow className={`${classes.cardHeight} overflow-auto `}>\r\n      {props.filteredData.map((recipe, index) => (\r\n        <CCol key={index} xs=\"12\" sm=\"6\" md=\"3\" className=\"  mb-4 text-center\">\r\n          <div className=\"w-100 ps-2\">\r\n            <RecipeCard\r\n              recipe={recipe}\r\n              handleShowMore={() => props.handleShowMore(index)}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      ))}\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default RecipeGrid;\r\n","import React, { useState } from \"react\";\r\nimport { CDropdown, CDropdownToggle, CDropdownMenu, CDropdownItem } from \"@coreui/react\";\r\n\r\nconst MeasureDropdown = () => {\r\n  const [medida, setMedida] = useState(\"\");\r\n  const options = [\r\n    { value: \"gr\", label: \"Gramos\" },\r\n    { value: \"ml\", label: \"Mililitros\" },\r\n    { value: \"piezas\", label: \"Piezas\" },\r\n  ];\r\n\r\n  const handleMeasure = (measure) => setMedida(measure);\r\n\r\n  return (\r\n    <CDropdown>\r\n      <CDropdownToggle color=\"secondary\">\r\n        {medida.length > 0 ? medida : \"Medida\"}\r\n      </CDropdownToggle>\r\n      <CDropdownMenu>\r\n        {options.map((option, i) => (\r\n          <CDropdownItem key={i} onClick={() => handleMeasure(option.value)}>\r\n            {option.label}\r\n          </CDropdownItem>\r\n        ))}\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  );\r\n};\r\n\r\nexport default MeasureDropdown;\r\n","import React from \"react\";\r\nimport { CFormInput, CFormLabel, CFormTextarea, CRow, CCol } from \"@coreui/react\";\r\nimport MeasureDropdown from \"./MeasureDropdown\";\r\n\r\nconst ProductForm = () => (\r\n  <CRow>\r\n    <CCol md=\"12\" lg=\"6\">\r\n      <div className=\"mb-3\">\r\n        <CFormLabel htmlFor=\"name\">Nombre</CFormLabel>\r\n        <CFormInput type=\"text\" id=\"name\" placeholder=\"Nombre\" />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <CFormLabel htmlFor=\"cost\">Costo de venta</CFormLabel>\r\n        <CFormInput type=\"text\" id=\"cost\" placeholder=\"Costo de venta\" />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <CRow>\r\n          <CCol sm=\"8\" md=\"8\" lg=\"8\">\r\n            <CFormLabel htmlFor=\"sell\">Cantidad de venta:</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"sell\" placeholder=\"Ej. 2\" />\r\n          </CCol>\r\n          <CCol sm=\"4\" md=\"4\" lg=\"4\">\r\n            <CFormLabel htmlFor=\"sell\">Medida:</CFormLabel> <br />\r\n            <MeasureDropdown />\r\n          </CCol>\r\n        </CRow>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <CFormLabel htmlFor=\"cost\">Costo</CFormLabel>\r\n        <CFormInput type=\"text\" id=\"cost\" placeholder=\"Costo\" />\r\n      </div>\r\n    </CCol>\r\n    <CCol>\r\n      <div className=\"mb-3\">\r\n        <CFormLabel htmlFor=\"yield\">Rendimiento de Receta:</CFormLabel>\r\n        <CFormInput type=\"text\" id=\"yield\" placeholder=\"Rendimiento de Receta:\" />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <CFormInput type=\"file\" id=\"image\" label=\"Imagen:\" />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <CFormLabel htmlFor=\"recipe\">Receta</CFormLabel>\r\n        <CFormTextarea id=\"recipe\" rows={3}></CFormTextarea>\r\n      </div>\r\n    </CCol>\r\n  </CRow>\r\n);\r\n\r\nexport default ProductForm;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nconst SearchableMultiSelect = ({\r\n  options = [], // List of options to search from\r\n  renderItem,\r\n  onChange,\r\n  value,\r\n  onSelect,\r\n}) => {\r\n  const [focusedIndex, setFocusedIndex] = useState(-1);\r\n  const resultContainer = useRef(null);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [filteredResults, setFilteredResults] = useState([]);\r\n\r\n  const resetSearchComplete = useCallback(() => {\r\n    setFocusedIndex(-1);\r\n    setShowResults(false);\r\n  }, []);\r\n\r\n  // Filter results based on search input\r\n  useEffect(() => {\r\n    if (searchValue) {\r\n      const results = options.filter((item) =>\r\n        item.label.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setFilteredResults(results);\r\n      setShowResults(true);\r\n    } else {\r\n      setFilteredResults([]);\r\n      setShowResults(false);\r\n    }\r\n  }, [searchValue, options]);\r\n\r\n  const handleSelection = (selectedItem) => {\r\n    if (!selectedItem) return resetSearchComplete();\r\n\r\n    // Add selected item to the list if not already selected\r\n    if (!selectedItems.includes(selectedItem)) {\r\n      setSelectedItems((prevItems) => [...prevItems, selectedItem]);\r\n      onSelect && onSelect([...selectedItems, selectedItem]);\r\n    }\r\n    resetSearchComplete();\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedItems = selectedItems.filter((i) => i !== item);\r\n    setSelectedItems(updatedItems);\r\n    onSelect && onSelect(updatedItems);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    const { key } = e;\r\n    let nextIndexCount = 0;\r\n\r\n    // move down\r\n    if (key === \"ArrowDown\")\r\n      nextIndexCount = (focusedIndex + 1) % filteredResults.length;\r\n\r\n    // move up\r\n    if (key === \"ArrowUp\")\r\n      nextIndexCount = (focusedIndex + filteredResults.length - 1) % filteredResults.length;\r\n\r\n    // hide search results\r\n    if (key === \"Escape\") {\r\n      resetSearchComplete();\r\n    }\r\n\r\n    // select the current item\r\n    if (key === \"Enter\") {\r\n      e.preventDefault();\r\n      handleSelection(filteredResults[focusedIndex]);\r\n    }\r\n\r\n    setFocusedIndex(nextIndexCount);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n    onChange && onChange(e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (value) setSearchValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className=\"multi-select\">\r\n      <div\r\n        tabIndex={1}\r\n        onBlur={resetSearchComplete}\r\n        onKeyDown={handleKeyDown}\r\n        className=\"relative\"\r\n      >\r\n        <input\r\n          value={searchValue}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          className=\"search-input\"\r\n          placeholder=\"Search and select...\"\r\n        />\r\n\r\n        {/* Search Results Container */}\r\n        {showResults && (\r\n          <div className=\"results-dropdown\">\r\n            {filteredResults.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                onMouseDown={() => handleSelection(item)}\r\n                ref={index === focusedIndex ? resultContainer : null}\r\n                style={{\r\n                  backgroundColor: index === focusedIndex ? \"rgba(0,0,0,0.1)\" : \"\",\r\n                }}\r\n                className=\"result-item\"\r\n              >\r\n                {renderItem(item)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Selected Items Container */}\r\n      <div className=\"selected-items\">\r\n        {selectedItems.map((item, index) => (\r\n          <div key={index} className=\"selected-item\">\r\n            {renderItem(item)}\r\n            <button onClick={() => handleRemove(item)} className=\"remove-btn\">\r\n              &times;\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchableMultiSelect;\r\n","import React, { useState } from \"react\";\r\nimport { CForm, CModal, CModalBody, CModalHeader, CContainer } from \"@coreui/react\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport SearchableMultiSelect from \"./SearchableMultiSelect\";\r\nimport consumablesData from \"../../../assets/consumables.json\"\r\n\r\nconst RecipeModal = (props) => {\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  return (\r\n    <CModal\r\n      alignment=\"center\"\r\n      scrollable\r\n      size=\"xl\"\r\n      visible={props.visible}\r\n      onClose={() => props.closeModal()}\r\n      aria-labelledby=\"Carro\"\r\n    >\r\n      <CModalHeader>Productos</CModalHeader>\r\n      <CModalBody>\r\n        <CForm>\r\n          <CContainer>\r\n            <ProductForm />\r\n            <SearchableMultiSelect\r\n  options={consumablesData}\r\n  renderItem={(item) => <span>{item.label}</span>}\r\n  onSelect={(selectedItems) => console.log(\"Selected items:\", selectedItems)}\r\n/>\r\n\r\n          </CContainer>\r\n        </CForm>\r\n      </CModalBody>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default RecipeModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport recipeExample from \"../../assets/recipes.json\";\r\nimport { CButton, CCard,   CRow } from \"@coreui/react\";\r\nimport RecipeBanner from \"./RecipeBanner\";\r\nimport RecipeGrid from \"./RecipeGrid\";\r\nimport RecipeModal from \"./recipeModal/RecipeModal\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilPlus } from \"@coreui/icons\";\r\n\r\nconst Recipes = () => {\r\n  const [data, setData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [showIndex, setShowIndex] = useState(null);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const handleShowMore = (index) => {\r\n    setShowIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(recipeExample.recipes);\r\n  }, []);\r\n\r\n  const handleSearch = (ev) => {\r\n    setSearchInput(ev.target.value);\r\n  };\r\n  const filteredData = data.filter((item) =>\r\n    item.name.toLowerCase().includes(searchInput.toLowerCase())\r\n  );\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"mb-3\">\r\n        <CRow>\r\n          <div className=\"col   mt-5 ms-4\">\r\n            <label for=\"search\">Buscar Receta:</label>\r\n            <input\r\n              id=\"search\"\r\n              type=\"text\"\r\n              placeholder=\"Buscar receta\"\r\n              value={searchInput}\r\n              onChange={handleSearch}\r\n              className=\"ms-3 \"\r\n            />\r\n          </div>\r\n          <div className=\"col-3 mt-4\">\r\n            <CButton className=\"   text-middle\" onClick={openModal}>\r\n              <CIcon icon={cilPlus} />\r\n              <p>Añadir Receta</p>\r\n            </CButton>\r\n          </div>\r\n          <div className=\"px-4\">\r\n            <hr />\r\n          </div>\r\n        </CRow>\r\n        {filteredData.length !== 0 ? (\r\n          <RecipeGrid\r\n            handleShowMore={handleShowMore}\r\n            filteredData={filteredData}\r\n          />\r\n        ) : (\r\n          <h3 className=\"text-center m-5\">No hay recetas para mostrar </h3>\r\n        )}\r\n      </CCard>\r\n      <RecipeModal visible={isModalOpen} closeModal={closeModal} />\r\n      {showIndex != null && (\r\n        <CCard>\r\n          <RecipeBanner recipe={data[showIndex]} />\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import React from \"react\";  \r\nimport Recepies from \"../../components/recipes/Recipes.js\";  \r\nimport Banner from \"../../components/Banner.js\";\r\nimport { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n  CChartDoughnut,\r\n  CChartLine,\r\n  CChartPie,\r\n  CChartPolarArea,\r\n  CChartRadar,\r\n} from '@coreui/react-chartjs' \r\n\r\nconst Dashboard = () => { \r\n\r\n  const random = () => Math.round(Math.random() * 100)\r\n\r\n  return (\r\n    <> \r\n    <Banner text=\"Dashboard\"/> \r\n    <CRow>\r\n      <CCol xs={12}> \r\n      </CCol>\r\n      <CCol xs={6}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>Bar Chart</CCardHeader>\r\n          <CCardBody>\r\n            <CChartBar\r\n              data={{\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [\r\n                  {\r\n                    label: 'GitHub Commits',\r\n                    backgroundColor: '#f87979',\r\n                    data: [40, 20, 12, 39, 10, 40, 39, 80, 40],\r\n                  },\r\n                ],\r\n              }}\r\n              labels=\"months\"\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={6}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>Line Chart</CCardHeader>\r\n          <CCardBody>\r\n            <CChartLine\r\n              data={{\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [\r\n                  {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'rgba(220, 220, 220, 0.2)',\r\n                    borderColor: 'rgba(220, 220, 220, 1)',\r\n                    pointBackgroundColor: 'rgba(220, 220, 220, 1)',\r\n                    pointBorderColor: '#fff',\r\n                    data: [random(), random(), random(), random(), random(), random(), random()],\r\n                  },\r\n                  {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: 'rgba(151, 187, 205, 0.2)',\r\n                    borderColor: 'rgba(151, 187, 205, 1)',\r\n                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',\r\n                    pointBorderColor: '#fff',\r\n                    data: [random(), random(), random(), random(), random(), random(), random()],\r\n                  },\r\n                ],\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={6}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>Doughnut Chart</CCardHeader>\r\n          <CCardBody>\r\n            <CChartDoughnut\r\n              data={{\r\n                labels: ['VueJs', 'EmberJs', 'ReactJs', 'AngularJs'],\r\n                datasets: [\r\n                  {\r\n                    backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\r\n                    data: [40, 20, 80, 10],\r\n                  },\r\n                ],\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={6}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>Pie Chart</CCardHeader>\r\n          <CCardBody>\r\n            <CChartPie\r\n              data={{\r\n                labels: ['Red', 'Green', 'Yellow'],\r\n                datasets: [\r\n                  {\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n                  },\r\n                ],\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>  \r\n      </CCol>\r\n    </CRow> \r\n      </>\r\n  );\r\n};\r\n\r\nexport default Dashboard; \r\n "],"names":["_ref","text","_jsx","className","children","props","name","image","sell","type","ingredients","recipe","_jsxs","_Fragment","CCardHeader","CCardBody","CRow","CCol","xs","style","maxHeight","maxWidth","src","alt","map","ingredient","i","quantity","measure","onClick","handleShowMore","classes","filteredData","index","sm","md","RecipeCard","MeasureDropdown","medida","setMedida","useState","CDropdown","CDropdownToggle","color","length","CDropdownMenu","value","label","option","CDropdownItem","handleMeasure","ProductForm","lg","CFormLabel","htmlFor","CFormInput","id","placeholder","CFormTextarea","rows","options","renderItem","onChange","onSelect","focusedIndex","setFocusedIndex","resultContainer","useRef","showResults","setShowResults","searchValue","setSearchValue","selectedItems","setSelectedItems","filteredResults","setFilteredResults","resetSearchComplete","useCallback","useEffect","results","filter","item","toLowerCase","includes","handleSelection","selectedItem","prevItems","tabIndex","onBlur","onKeyDown","e","key","nextIndexCount","preventDefault","target","onMouseDown","ref","backgroundColor","updatedItems","handleRemove","CModal","alignment","scrollable","size","visible","onClose","closeModal","CModalHeader","CModalBody","CForm","CContainer","SearchableMultiSelect","consumablesData","console","log","Recipes","data","setData","searchInput","setSearchInput","showIndex","setShowIndex","isModalOpen","setModalOpen","recipeExample","CCard","for","ev","CButton","openModal","CIcon","icon","cilPlus","RecipeGrid","RecipeModal","RecipeBanner","Dashboard","random","Math","round","Banner","CChartBar","labels","datasets","CChartLine","borderColor","pointBackgroundColor","pointBorderColor","CChartDoughnut","CChartPie","hoverBackgroundColor"],"sourceRoot":""}