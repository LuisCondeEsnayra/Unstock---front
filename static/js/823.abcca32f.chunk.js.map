{"version":3,"file":"static/js/823.abcca32f.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/cart/CartTable.js","components/cart/CartCard.js","components/cart/Cart.js","components/AppHeader.js","components/AppSidebarNav.js","assets/unstock.svg","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from \"react\";  \r\nconst Dashboard = React.lazy(() => import(\"./views/dashboard/Dashboard\")); \r\n\r\n// Base\r\nconst Recipes = React.lazy(() => import(\"./views/recipes/Recipes\"));  \r\nconst Consumables = React.lazy(() => import(\"./views/consumables/ConsumablesView\")); \r\n \r\nconst routes = [\r\n  { path: \"/\", exact: true, name: \"Login Page\",},\r\n  { path: \"/dashboard\", name: \"Dashboard\", element: Dashboard },\r\n  { path: \"/recetas\", name: \"Recetas\", element: Recipes },\r\n  { path: \"/insumos\", name: \"Insumos\", element: Consumables },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport routes from '../routes'\r\n\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\n\r\nconst AppBreadcrumb = () => {\r\n  const currentLocation = useLocation().pathname\r\n\r\n  const getRouteName = (pathname, routes) => {\r\n    const currentRoute = routes.find((route) => route.path === pathname)\r\n    return currentRoute ? currentRoute.name : false\r\n  }\r\n\r\n  const getBreadcrumbs = (location) => {\r\n    const breadcrumbs = []\r\n    location.split('/').reduce((prev, curr, index, array) => {\r\n      const currentPathname = `${prev}/${curr}`\r\n      const routeName = getRouteName(currentPathname, routes)\r\n      routeName &&\r\n        breadcrumbs.push({\r\n          pathname: currentPathname,\r\n          name: routeName,\r\n          active: index + 1 === array.length ? true : false,\r\n        })\r\n      return currentPathname\r\n    })\r\n    return breadcrumbs\r\n  }\r\n\r\n  const breadcrumbs = getBreadcrumbs(currentLocation)\r\n\r\n  return (\r\n    <CBreadcrumb className=\"my-0\">\r\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\r\n      {breadcrumbs.map((breadcrumb, index) => {\r\n        return (\r\n          <CBreadcrumbItem\r\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\r\n            key={index}\r\n          >\r\n            {breadcrumb.name}\r\n          </CBreadcrumbItem>\r\n        )\r\n      })}\r\n    </CBreadcrumb>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppBreadcrumb)\r\n","import React, { Suspense } from 'react'\r\nimport { Navigate, Route, Routes } from 'react-router-dom'\r\nimport { CContainer, CSpinner } from '@coreui/react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\n\r\nconst AppContent = () => {\r\n  return (\r\n    <CContainer className=\"px-4\" lg>\r\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\r\n        <Routes>\r\n          {routes.map((route, idx) => {\r\n            return (\r\n              route.element && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  element={<route.element />}\r\n                />\r\n              )\r\n            )\r\n          })}\r\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </CContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppContent)\r\n","import React from 'react'\r\nimport { CFooter } from '@coreui/react'\r\n\r\nconst AppFooter = () => {\r\n  return (\r\n    <CFooter className=\"px-4\">\r\n      <div> \r\n      </div>\r\n    </CFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppFooter)\r\n","import { CButton, CTableDataCell, CTableRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst CartTable = (props) => {\r\n  const { name, image, ingredients } = props.recipe;\r\n  const [quantity, setQuantity] = useState(0);\r\n\r\n  function transformToSnakeCase(str) {\r\n    // Convert the string to lowercase, replace spaces with underscores, and normalize accented characters\r\n    return str\r\n      .toLowerCase()                  // Convert to lowercase\r\n      .normalize('NFD')                // Normalize accented characters\r\n      .replace(/[\\u0300-\\u036f]/g, \"\") // Remove diacritical marks (accents)\r\n      .replace(/\\s+/g, \"_\");           // Replace spaces with underscores\r\n  }\r\n  // Check available stock for ingredients\r\n  const checkStock = (ingredientName) => {\r\n    const ingredientSnake =transformToSnakeCase(ingredientName)\r\n    const ingredient = props.consumables.find(item => item.name === ingredientSnake); \r\n    console.log(ingredientSnake)\r\n    console.log(ingredient)\r\n    return ingredient ? ingredient.stock : 0;\r\n  };\r\n\r\n  const addQuantity = () => {\r\n    // Check if all ingredients are in stock before adding\r\n    const insufficientStock = ingredients.some(ingredient => {\r\n      const stockAvailable = checkStock(ingredient.ingredient);\r\n      return stockAvailable < quantity + 1;\r\n    });\r\n\r\n    if (!insufficientStock) {\r\n      setQuantity(quantity + 1);\r\n    } else {\r\n      alert(\"No hay suficiente stock para crear esta receta!\");\r\n    }\r\n  };\r\n\r\n  const restQuantity = () => {\r\n    if (quantity > 0) setQuantity(quantity - 1);\r\n  };\r\n\r\n  return (\r\n    <CTableRow>\r\n      <CTableDataCell className=\"text-center align-middle\">\r\n        <img src={image} alt={name} height=\"100vh\" />\r\n      </CTableDataCell>\r\n      <CTableDataCell className=\"text-center align-middle \">{name}</CTableDataCell>\r\n      <CTableDataCell className=\"text-center align-middle\">\r\n        <CButton variant=\"outline\" onClick={addQuantity}>+</CButton>\r\n        <p>{quantity}</p>\r\n        <CButton variant=\"outline\" onClick={restQuantity}>-</CButton>\r\n      </CTableDataCell>\r\n    </CTableRow>\r\n  );\r\n};\r\n\r\nexport default CartTable;\r\n","import { CTable, CTableBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport CartTable from \"./CartTable\";\r\n\r\nconst CartCard = (props) => {\r\n  return (\r\n    <CTable hover>\r\n      <CTableBody>\r\n        {props.recipes.map((recipe) => (\r\n          <CartTable\r\n            key={recipe.id}\r\n            recipe={recipe}\r\n            consumables={props.consumables} // Passing consumables data\r\n          />\r\n        ))}\r\n      </CTableBody>\r\n    </CTable>\r\n  );\r\n};\r\n\r\nexport default CartCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CartCard from \"./CartCard\";\r\nimport {\r\n  CButton,\r\n  CFormInput,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {  cilFastfood } from \"@coreui/icons\";\r\nimport recipeExample from \"../../assets/recipes.json\";\r\nimport consumablesData from \"../../assets/consumables.json\"; // Assuming consumables data is imported\r\n\r\nconst Cart = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\r\n  const [consumables, setConsumables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setRecipes(recipeExample.recipes);\r\n    setFilteredRecipes(recipeExample.recipes);\r\n    setConsumables(consumablesData); // Assuming consumables data is fetched or imported\r\n  }, []);\r\n\r\n  const handleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    const searchValue = event.target.value;\r\n    setSearchTerm(searchValue);\r\n\r\n    const filtered = recipes.filter((recipe) =>\r\n      recipe.name.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n\r\n    setFilteredRecipes(filtered);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CButton   onClick={handleVisibility}>\r\n        <CIcon  size=\"xxl\"  icon={cilFastfood} />\r\n      </CButton>\r\n      <CModal\r\n        alignment=\"center\"\r\n        scrollable\r\n        visible={visible}\r\n        onClose={() => setVisible(false)}\r\n        aria-labelledby=\"Ordenes\"\r\n      >\r\n        <CModalHeader>Ordenes</CModalHeader>\r\n\r\n        <CFormInput\r\n          type=\"text\"\r\n          placeholder=\"Buscar...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"mb-3\"\r\n        />\r\n\r\n        <CModalBody>\r\n          {filteredRecipes.length > 0 ? (\r\n            <CartCard recipes={filteredRecipes} consumables={consumables} />\r\n          ) : (\r\n            <h5>No se encontraron resultados</h5>\r\n          )}\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={() => setVisible(false)}>\r\n            Ordenar\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  CContainer, \r\n  CHeader,\r\n  CHeaderNav,\r\n  CHeaderToggler,\r\n  CNavLink,\r\n  CNavItem, \r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {  \r\n  cilMenu, \r\n} from \"@coreui/icons\";\r\n\r\nimport { AppBreadcrumb } from \"./index\";\r\nimport Cart from \"./cart/Cart\";\r\nimport { setAuthenticated, toggleSidebar } from \"../store\";\r\n\r\nconst AppHeader = () => {\r\n  const headerRef = useRef(); \r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", () => {\r\n      headerRef.current &&\r\n        headerRef.current.classList.toggle(\r\n          \"shadow-sm\",\r\n          document.documentElement.scrollTop > 0\r\n        );\r\n    });\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(setAuthenticated(false));\r\n    navigate(\"/login\", { replace: true });\r\n  };\r\n\r\n  const navOptions = [\"Dashboard\",\"Recetas\",\"Insumos\"]\r\n  const handleNavItems=(item)=>{\r\n    \r\n    navigate(\"/\"+item, { replace: true });\r\n  }\r\n\r\n  return (\r\n    <CHeader position=\"sticky\" className=\"mb-4 p-0 bg-success\" ref={headerRef}>\r\n      <CContainer className=\"border-bottom px-4\" fluid>\r\n        <CHeaderToggler\r\n          onClick={() => {\r\n            dispatch(toggleSidebar());\r\n          }}\r\n          style={{ marginInlineStart: \"-14px\" }}\r\n        >\r\n          <CIcon icon={cilMenu} size=\"lg\" />\r\n        </CHeaderToggler>\r\n        <CHeaderNav className=\"d-none d-md-flex\">\r\n       \r\n         {navOptions.map(item=> <CNavItem>\r\n            <CNavLink onClick={()=>{handleNavItems(item.toLowerCase())}}>{item}</CNavLink>\r\n          </CNavItem> )}\r\n        </CHeaderNav>\r\n        <CHeaderNav className=\"ms-auto\">\r\n          <CNavItem>\r\n            <Cart />\r\n          </CNavItem>\r\n        </CHeaderNav>\r\n        <CHeaderNav>\r\n          {/* <li className=\"nav-item py-1\">\r\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\r\n          </li> */}\r\n          {/* <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\r\n            <CDropdownToggle caret={false}>\r\n              {colorMode === \"dark\" ? (\r\n                <CIcon icon={cilMoon} size=\"lg\" />\r\n              ) : colorMode === \"auto\" ? (\r\n                <CIcon icon={cilContrast} size=\"lg\" />\r\n              ) : (\r\n                <CIcon icon={cilSun} size=\"lg\" />\r\n              )}\r\n            </CDropdownToggle>\r\n            <CDropdownMenu>\r\n              <CDropdownItem\r\n                active={colorMode === \"light\"}\r\n                className=\"d-flex align-items-center\"\r\n                as=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setColorMode(\"light\")}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\r\n              </CDropdownItem>\r\n              <CDropdownItem\r\n                active={colorMode === \"dark\"}\r\n                className=\"d-flex align-items-center\"\r\n                as=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setColorMode(\"dark\")}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\r\n              </CDropdownItem>\r\n              <CDropdownItem\r\n                active={colorMode === \"auto\"}\r\n                className=\"d-flex align-items-center\"\r\n                as=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setColorMode(\"auto\")}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilContrast} size=\"lg\" /> Auto\r\n              </CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown> */}\r\n          <li className=\"nav-item py-1\">\r\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\r\n          </li>\r\n          <CNavItem>\r\n            <CButton color=\"dark ms-3\" onClick={handleLogout}>\r\n              Salir\r\n            </CButton>\r\n          </CNavItem>\r\n        </CHeaderNav>\r\n      </CContainer>\r\n      <CContainer className=\"px-4\" fluid>\r\n        <AppBreadcrumb />\r\n      </CContainer>\r\n    </CHeader>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar-react/dist/simplebar.min.css'\r\n\r\nimport { CBadge, CNavLink, CSidebarNav } from '@coreui/react'\r\n\r\nexport const AppSidebarNav = ({ items }) => {\r\n  const navLink = (name, icon, badge, indent = false) => {\r\n    return (\r\n      <>\r\n        {icon\r\n          ? icon\r\n          : indent && (\r\n              <span className=\"nav-icon\">\r\n                <span className=\"nav-icon-bullet\"></span>\r\n              </span>\r\n            )}\r\n        {name && name}\r\n        {badge && (\r\n          <CBadge color={badge.color} className=\"ms-auto\">\r\n            {badge.text}\r\n          </CBadge>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const navItem = (item, index, indent = false) => {\r\n    const { component, name, badge, icon, ...rest } = item\r\n    const Component = component\r\n    return (\r\n      <Component as=\"div\" key={index}>\r\n        {rest.to || rest.href ? (\r\n          <CNavLink {...(rest.to && { as: NavLink })} {...rest}>\r\n            {navLink(name, icon, badge, indent)}\r\n          </CNavLink>\r\n        ) : (\r\n          navLink(name, icon, badge, indent)\r\n        )}\r\n      </Component>\r\n    )\r\n  }\r\n\r\n  const navGroup = (item, index) => {\r\n    const { component, name, icon, items, to, ...rest } = item\r\n    const Component = component\r\n    return (\r\n      <Component compact as=\"div\" key={index} toggler={navLink(name, icon)} {...rest}>\r\n        {item.items?.map((item, index) =>\r\n          item.items ? navGroup(item, index) : navItem(item, index, true),\r\n        )}\r\n      </Component>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CSidebarNav as={SimpleBar}>\r\n      {items &&\r\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\r\n    </CSidebarNav>\r\n  )\r\n}\r\n\r\nAppSidebarNav.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n}\r\n","var _metadata, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUnstock(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"300.000000pt\",\n    height: \"100.000000pt\",\n    viewBox: \"0 0 300.000000 100.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \"\\nCreated by potrace 1.10, written by Peter Selinger 2001-2011\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,100.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M119 740 c0 -3 0 -88 1 -189 1 -200 8 -231 58 -285 84 -90 249 -87 326 5 52 61 56 83 56 286 l0 188 -25 0 -25 0 0 -170 c0 -93 -5 -186 -10 -207 -6 -21 -27 -51 -50 -71 -66 -60 -151 -62 -217 -4 -58 51 -63 74 -63 276 l0 179 -25 -2 c-14 0 -25 -3 -26 -6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M993 720 c-38 -22 -73 -86 -73 -130 0 -17 9 -49 21 -71 30 -60 78 -79 207 -79 101 0 104 -1 133 -29 21 -22 29 -39 29 -66 0 -27 -8 -44 -29 -66 -29 -28 -32 -29 -134 -29 -99 0 -107 2 -136 26 -19 16 -31 35 -31 50 0 20 -5 24 -31 24 -30 0 -31 -1 -25 -32 9 -43 31 -75 69 -98 27 -17 51 -20 153 -20 109 0 124 2 155 23 44 30 74 100 65 152 -10 50 -61 104 -111 115 -22 5 -81 10 -130 10 -103 0 -127 11 -145 64 -9 29 -8 40 5 66 22 43 68 60 162 60 97 0 144 -20 158 -67 8 -28 14 -33 38 -33 27 0 29 2 22 28 -11 43 -44 91 -75 107 -21 11 -62 15 -147 15 -99 0 -123 -3 -150 -20z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M620 470 l0 -150 25 0 c24 0 24 1 27 108 3 91 5 103 15 82 6 -14 34 -61 60 -105 46 -75 51 -80 86 -83 l37 -3 0 150 0 151 -31 0 -31 0 4 -105 c1 -58 1 -105 -2 -105 -3 1 -32 48 -65 105 -57 99 -62 104 -92 105 l-33 0 0 -150z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1420 589 l0 -32 50 5 50 5 0 -123 0 -124 28 0 c26 0 27 2 25 47 -2 27 -4 82 -5 125 l-3 76 52 -5 53 -6 0 32 0 31 -125 0 -125 0 0 -31z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1814 606 c-60 -27 -99 -104 -84 -169 35 -156 255 -156 290 0 27 118 -94 217 -206 169z m130 -77 c44 -52 28 -123 -34 -149 -38 -16 -75 -6 -106 27 -32 35 -32 82 2 122 21 26 33 31 69 31 36 0 48 -5 69 -31z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2156 597 c-70 -40 -95 -124 -58 -197 35 -71 118 -99 197 -66 39 17 42 22 19 47 -14 15 -18 16 -42 3 -15 -8 -37 -14 -49 -14 -30 0 -80 45 -88 80 -7 33 15 84 44 100 25 13 77 13 102 -1 15 -7 24 -7 35 2 23 19 16 34 -21 52 -48 23 -92 21 -139 -6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2390 470 l0 -150 34 0 c29 0 36 5 57 45 13 25 27 45 31 45 4 0 19 -20 34 -45 23 -39 30 -45 60 -45 l34 0 -45 69 c-25 38 -45 74 -45 80 0 6 20 42 45 81 l45 70 -34 0 c-32 0 -37 -5 -90 -94 -31 -52 -56 -99 -56 -105 0 -6 -5 -11 -11 -11 -9 0 -10 29 -5 105 l7 105 -31 0 -30 0 0 -150z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2671 473 c19 -21 45 -50 58 -65 l24 -27 -37 -46 -38 -46 -649 3 -649 3 0 -22 0 -23 673 1 672 0 53 64 54 65 -57 65 c-53 60 -61 65 -98 65 l-41 0 35 -37z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M570 273 c0 -23 1 -23 165 -23 164 0 165 0 165 23 0 22 -1 22 -165 22 -164 0 -165 0 -165 -22z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUnstock);\nexport default __webpack_public_path__ + \"static/media/unstock.3211bd84950ecbaf2f3b461d08b3cafb.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { \r\n  cilListRich,\r\n  cilNotes, \r\n  cilSpeedometer, \r\n} from '@coreui/icons'\r\nimport { CNavItem } from '@coreui/react'\r\n\r\nconst _nav = [\r\n  {\r\n    component: CNavItem,\r\n    name: 'Dashboard',\r\n    to: '/dashboard',\r\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\r\n    badge: {\r\n      color: 'info',\r\n      text: 'NEW',\r\n    },\r\n  },\r\n  {\r\n    component: CNavItem,\r\n    name: 'Recetas',\r\n    to: '/recetas',\r\n    icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />, \r\n  }, \r\n  {\r\n    component: CNavItem,\r\n    name: 'Insumos',\r\n    to: '/insumos',\r\n    icon: <CIcon icon={cilListRich} customClassName=\"nav-icon\" />, \r\n  }, \r\n  // {\r\n  //   component: CNavGroup,\r\n  //   name: 'Pages',\r\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\r\n  //   items: [\r\n  //     {\r\n  //       component: CNavItem,\r\n  //       name: 'Login',\r\n  //       to: '/login',\r\n  //     },\r\n  //     {\r\n  //       component: CNavItem,\r\n  //       name: 'Register',\r\n  //       to: '/register',\r\n  //     },\r\n  //     {\r\n  //       component: CNavItem,\r\n  //       name: 'Error 404',\r\n  //       to: '/404',\r\n  //     },\r\n  //     {\r\n  //       component: CNavItem,\r\n  //       name: 'Error 500',\r\n  //       to: '/500',\r\n  //     },\r\n  //   ],\r\n  // },\r\n]\r\n\r\nexport default _nav\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CCloseButton,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarFooter,\r\n  CSidebarHeader,\r\n  CSidebarToggler,\r\n} from '@coreui/react' \r\nimport { AppSidebarNav } from './AppSidebarNav'\r\nimport unstockSVG from '../assets/unstock.svg'\r\nimport navigation from '../_nav'\r\nimport { toggleSidebar } from '../store'\r\n\r\nconst AppSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\r\n  const sidebarShow = useSelector((state) => state.sidebarShow)\r\n\r\n  return (\r\n    <CSidebar\r\n      className=\"border-end\"\r\n      colorScheme=\"light\"\r\n      position=\"fixed\"\r\n      unfoldable={unfoldable}\r\n      visible={sidebarShow}\r\n      onVisibleChange={(visible) => {\r\n        dispatch({ type: 'set', sidebarShow: visible })\r\n      }}\r\n    >\r\n      <CSidebarHeader className=\"border-bottom\">\r\n         <CSidebarBrand to=\"/\"  style={{ backgroundColor: 'white' }}  >\r\n  <img src={unstockSVG} alt=\"Unstock Logo\" height=\"60\" className=\"sidebar-brand-full\" />\r\n</CSidebarBrand>\r\n\r\n        <CCloseButton\r\n          className=\"d-lg-none\"\r\n          onClick={() => dispatch(toggleSidebar())}\r\n        />\r\n      </CSidebarHeader>\r\n      <AppSidebarNav items={navigation} />\r\n      <CSidebarFooter className=\"border-top d-none d-lg-flex\">\r\n        <CSidebarToggler\r\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\r\n        />\r\n      </CSidebarFooter>\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppSidebar)\r\n","import React from 'react'\r\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\r\n\r\nconst DefaultLayout = () => {\r\n  return (\r\n    <div>\r\n      <AppSidebar />\r\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\r\n        <AppHeader />\r\n        <div className=\"body flex-grow-1\">\r\n          <AppContent />\r\n        </div>\r\n        <AppFooter />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DefaultLayout\r\n"],"names":["path","exact","name","element","React","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","getRouteName","routes","currentRoute","find","route","push","active","length","getBreadcrumbs","_jsxs","CBreadcrumb","className","children","_jsx","CBreadcrumbItem","href","map","breadcrumb","_createElement","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","idx","Route","Navigate","to","replace","AppFooter","CFooter","props","image","ingredients","recipe","quantity","setQuantity","useState","CTableRow","CTableDataCell","src","alt","height","CButton","variant","onClick","addQuantity","some","ingredient","stockAvailable","ingredientName","ingredientSnake","toLowerCase","normalize","consumables","item","console","log","stock","checkStock","alert","restQuantity","CTable","hover","CTableBody","recipes","CartTable","id","Cart","visible","setVisible","searchTerm","setSearchTerm","setRecipes","filteredRecipes","setFilteredRecipes","setConsumables","useEffect","recipeExample","consumablesData","_Fragment","handleVisibility","CIcon","size","icon","cilFastfood","CModal","alignment","scrollable","onClose","CModalHeader","CFormInput","type","placeholder","value","onChange","event","searchValue","target","filtered","filter","includes","CModalBody","CartCard","CModalFooter","AppHeader","headerRef","useRef","dispatch","useDispatch","navigate","useNavigate","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","position","ref","fluid","CHeaderToggler","toggleSidebar","style","marginInlineStart","cilMenu","CHeaderNav","CNavItem","CNavLink","handleNavItems","handleLogout","setAuthenticated","AppSidebarNav","_ref","items","navLink","badge","indent","arguments","undefined","CBadge","text","navItem","component","rest","Component","as","NavLink","navGroup","_item$items","compact","toggler","CSidebarNav","SimpleBar","cilSpeedometer","customClassName","cilNotes","cilListRich","AppSidebar","unfoldable","useSelector","state","sidebarUnfoldable","sidebarShow","CSidebar","colorScheme","onVisibleChange","CSidebarHeader","CSidebarBrand","backgroundColor","unstockSVG","CCloseButton","navigation","CSidebarFooter","CSidebarToggler","DefaultLayout"],"sourceRoot":""}